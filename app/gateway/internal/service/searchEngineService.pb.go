// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.5
// source: searchEngineService.pb

package service

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SearchEngineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SearchEngineReq *SearchEngineModel `protobuf:"bytes,1,opt,name=SearchEngineReq,proto3" json:"SearchEngineReq,omitempty"`
	Key             string             `protobuf:"bytes,2,opt,name=Key,proto3" json:"Key,omitempty"`
	Table           string             `protobuf:"bytes,3,opt,name=Table,proto3" json:"Table,omitempty"`
	Data            []*PostData        `protobuf:"bytes,4,rep,name=Data,proto3" json:"Data,omitempty"`
}

func (x *SearchEngineRequest) Reset() {
	*x = SearchEngineRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searchEngineService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchEngineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchEngineRequest) ProtoMessage() {}

func (x *SearchEngineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_searchEngineService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchEngineRequest.ProtoReflect.Descriptor instead.
func (*SearchEngineRequest) Descriptor() ([]byte, []int) {
	return file_searchEngineService_proto_rawDescGZIP(), []int{0}
}

func (x *SearchEngineRequest) GetSearchEngineReq() *SearchEngineModel {
	if x != nil {
		return x.SearchEngineReq
	}
	return nil
}

func (x *SearchEngineRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *SearchEngineRequest) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *SearchEngineRequest) GetData() []*PostData {
	if x != nil {
		return x.Data
	}
	return nil
}

type PostData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=Value,proto3" json:"Value,omitempty"`
}

func (x *PostData) Reset() {
	*x = PostData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searchEngineService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostData) ProtoMessage() {}

func (x *PostData) ProtoReflect() protoreflect.Message {
	mi := &file_searchEngineService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostData.ProtoReflect.Descriptor instead.
func (*PostData) Descriptor() ([]byte, []int) {
	return file_searchEngineService_proto_rawDescGZIP(), []int{1}
}

func (x *PostData) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *PostData) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type SearchEngineList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UrlID uint32 `protobuf:"varint,1,opt,name=UrlID,proto3" json:"UrlID,omitempty"`
	Desc  string `protobuf:"bytes,2,opt,name=Desc,proto3" json:"Desc,omitempty"`
	Url   string `protobuf:"bytes,3,opt,name=Url,proto3" json:"Url,omitempty"`
}

func (x *SearchEngineList) Reset() {
	*x = SearchEngineList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searchEngineService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchEngineList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchEngineList) ProtoMessage() {}

func (x *SearchEngineList) ProtoReflect() protoreflect.Message {
	mi := &file_searchEngineService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchEngineList.ProtoReflect.Descriptor instead.
func (*SearchEngineList) Descriptor() ([]byte, []int) {
	return file_searchEngineService_proto_rawDescGZIP(), []int{2}
}

func (x *SearchEngineList) GetUrlID() uint32 {
	if x != nil {
		return x.UrlID
	}
	return 0
}

func (x *SearchEngineList) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *SearchEngineList) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type SearchEngineResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SearchEngineInfoList []*SearchEngineList `protobuf:"bytes,1,rep,name=SearchEngineInfoList,proto3" json:"SearchEngineInfoList,omitempty"`
	Msg                  string              `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	Data                 []string            `protobuf:"bytes,3,rep,name=Data,proto3" json:"Data,omitempty"`
	Code                 uint32              `protobuf:"varint,4,opt,name=Code,proto3" json:"Code,omitempty"`
}

func (x *SearchEngineResponse) Reset() {
	*x = SearchEngineResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searchEngineService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchEngineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchEngineResponse) ProtoMessage() {}

func (x *SearchEngineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_searchEngineService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchEngineResponse.ProtoReflect.Descriptor instead.
func (*SearchEngineResponse) Descriptor() ([]byte, []int) {
	return file_searchEngineService_proto_rawDescGZIP(), []int{3}
}

func (x *SearchEngineResponse) GetSearchEngineInfoList() []*SearchEngineList {
	if x != nil {
		return x.SearchEngineInfoList
	}
	return nil
}

func (x *SearchEngineResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SearchEngineResponse) GetData() []string {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SearchEngineResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

var File_searchEngineService_proto protoreflect.FileDescriptor

var file_searchEngineService_proto_rawDesc = []byte{
	0x0a, 0x19, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x1a,
	0x18, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa0, 0x01, 0x0a, 0x13, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x3f, 0x0a, 0x0f, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x62, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x52, 0x0f, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x04, 0x44, 0x61,
	0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x6f,
	0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x32, 0x0a, 0x08,
	0x50, 0x6f, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x4e, 0x0a, 0x10, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x55, 0x72, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x55, 0x72, 0x6c, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x65,
	0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x65, 0x73, 0x63, 0x12, 0x10,
	0x0a, 0x03, 0x55, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x72, 0x6c,
	0x22, 0x9a, 0x01, 0x0a, 0x14, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x14, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x14, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x32, 0xbf, 0x02,
	0x0a, 0x13, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x44, 0x0a, 0x0f, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x45,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x41, 0x64, 0x64, 0x12, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x12, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x12, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x62, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x14, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x41, 0x6c, 0x6c, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x17, 0x2e, 0x70,
	0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4e, 0x0a, 0x19, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x41,
	0x6c, 0x6c, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x17, 0x2e, 0x70,
	0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x1b, 0x5a, 0x19, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_searchEngineService_proto_rawDescOnce sync.Once
	file_searchEngineService_proto_rawDescData = file_searchEngineService_proto_rawDesc
)

func file_searchEngineService_proto_rawDescGZIP() []byte {
	file_searchEngineService_proto_rawDescOnce.Do(func() {
		file_searchEngineService_proto_rawDescData = protoimpl.X.CompressGZIP(file_searchEngineService_proto_rawDescData)
	})
	return file_searchEngineService_proto_rawDescData
}

var file_searchEngineService_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_searchEngineService_proto_goTypes = []interface{}{
	(*SearchEngineRequest)(nil),  // 0: pb.SearchEngineRequest
	(*PostData)(nil),             // 1: pb.PostData
	(*SearchEngineList)(nil),     // 2: pb.SearchEngineList
	(*SearchEngineResponse)(nil), // 3: pb.SearchEngineResponse
	(*SearchEngineModel)(nil),    // 4: pb.SearchEngineModel
}
var file_searchEngineService_proto_depIdxs = []int32{
	4, // 0: pb.SearchEngineRequest.SearchEngineReq:type_name -> pb.SearchEngineModel
	1, // 1: pb.SearchEngineRequest.Data:type_name -> pb.PostData
	2, // 2: pb.SearchEngineResponse.SearchEngineInfoList:type_name -> pb.SearchEngineList
	0, // 3: pb.SearchEngineService.SearchEngineAdd:input_type -> pb.SearchEngineRequest
	0, // 4: pb.SearchEngineService.SearchEngineSearch:input_type -> pb.SearchEngineRequest
	0, // 5: pb.SearchEngineService.SearchEngineAllIndex:input_type -> pb.SearchEngineRequest
	0, // 6: pb.SearchEngineService.SearchEngineAllIndexCount:input_type -> pb.SearchEngineRequest
	3, // 7: pb.SearchEngineService.SearchEngineAdd:output_type -> pb.SearchEngineResponse
	3, // 8: pb.SearchEngineService.SearchEngineSearch:output_type -> pb.SearchEngineResponse
	3, // 9: pb.SearchEngineService.SearchEngineAllIndex:output_type -> pb.SearchEngineResponse
	3, // 10: pb.SearchEngineService.SearchEngineAllIndexCount:output_type -> pb.SearchEngineResponse
	7, // [7:11] is the sub-list for method output_type
	3, // [3:7] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_searchEngineService_proto_init() }
func file_searchEngineService_proto_init() {
	if File_searchEngineService_proto != nil {
		return
	}
	file_searchEngineModels_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_searchEngineService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchEngineRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searchEngineService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searchEngineService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchEngineList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searchEngineService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchEngineResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_searchEngineService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_searchEngineService_proto_goTypes,
		DependencyIndexes: file_searchEngineService_proto_depIdxs,
		MessageInfos:      file_searchEngineService_proto_msgTypes,
	}.Build()
	File_searchEngineService_proto = out.File
	file_searchEngineService_proto_rawDesc = nil
	file_searchEngineService_proto_goTypes = nil
	file_searchEngineService_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SearchEngineServiceClient is the client API for SearchEngineService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SearchEngineServiceClient interface {
	SearchEngineAdd(ctx context.Context, in *SearchEngineRequest, opts ...grpc.CallOption) (*SearchEngineResponse, error)
	SearchEngineSearch(ctx context.Context, in *SearchEngineRequest, opts ...grpc.CallOption) (*SearchEngineResponse, error)
	SearchEngineAllIndex(ctx context.Context, in *SearchEngineRequest, opts ...grpc.CallOption) (*SearchEngineResponse, error)
	SearchEngineAllIndexCount(ctx context.Context, in *SearchEngineRequest, opts ...grpc.CallOption) (*SearchEngineResponse, error)
}

type searchEngineServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSearchEngineServiceClient(cc grpc.ClientConnInterface) SearchEngineServiceClient {
	return &searchEngineServiceClient{cc}
}

func (c *searchEngineServiceClient) SearchEngineAdd(ctx context.Context, in *SearchEngineRequest, opts ...grpc.CallOption) (*SearchEngineResponse, error) {
	out := new(SearchEngineResponse)
	err := c.cc.Invoke(ctx, "/pb.SearchEngineService/SearchEngineAdd", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *searchEngineServiceClient) SearchEngineSearch(ctx context.Context, in *SearchEngineRequest, opts ...grpc.CallOption) (*SearchEngineResponse, error) {
	out := new(SearchEngineResponse)
	err := c.cc.Invoke(ctx, "/pb.SearchEngineService/SearchEngineSearch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *searchEngineServiceClient) SearchEngineAllIndex(ctx context.Context, in *SearchEngineRequest, opts ...grpc.CallOption) (*SearchEngineResponse, error) {
	out := new(SearchEngineResponse)
	err := c.cc.Invoke(ctx, "/pb.SearchEngineService/SearchEngineAllIndex", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *searchEngineServiceClient) SearchEngineAllIndexCount(ctx context.Context, in *SearchEngineRequest, opts ...grpc.CallOption) (*SearchEngineResponse, error) {
	out := new(SearchEngineResponse)
	err := c.cc.Invoke(ctx, "/pb.SearchEngineService/SearchEngineAllIndexCount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SearchEngineServiceServer is the server API for SearchEngineService service.
type SearchEngineServiceServer interface {
	SearchEngineAdd(context.Context, *SearchEngineRequest) (*SearchEngineResponse, error)
	SearchEngineSearch(context.Context, *SearchEngineRequest) (*SearchEngineResponse, error)
	SearchEngineAllIndex(context.Context, *SearchEngineRequest) (*SearchEngineResponse, error)
	SearchEngineAllIndexCount(context.Context, *SearchEngineRequest) (*SearchEngineResponse, error)
}

// UnimplementedSearchEngineServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSearchEngineServiceServer struct {
}

func (*UnimplementedSearchEngineServiceServer) SearchEngineAdd(context.Context, *SearchEngineRequest) (*SearchEngineResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchEngineAdd not implemented")
}
func (*UnimplementedSearchEngineServiceServer) SearchEngineSearch(context.Context, *SearchEngineRequest) (*SearchEngineResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchEngineSearch not implemented")
}
func (*UnimplementedSearchEngineServiceServer) SearchEngineAllIndex(context.Context, *SearchEngineRequest) (*SearchEngineResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchEngineAllIndex not implemented")
}
func (*UnimplementedSearchEngineServiceServer) SearchEngineAllIndexCount(context.Context, *SearchEngineRequest) (*SearchEngineResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchEngineAllIndexCount not implemented")
}

func RegisterSearchEngineServiceServer(s *grpc.Server, srv SearchEngineServiceServer) {
	s.RegisterService(&_SearchEngineService_serviceDesc, srv)
}

func _SearchEngineService_SearchEngineAdd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchEngineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SearchEngineServiceServer).SearchEngineAdd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.SearchEngineService/SearchEngineAdd",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SearchEngineServiceServer).SearchEngineAdd(ctx, req.(*SearchEngineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SearchEngineService_SearchEngineSearch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchEngineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SearchEngineServiceServer).SearchEngineSearch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.SearchEngineService/SearchEngineSearch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SearchEngineServiceServer).SearchEngineSearch(ctx, req.(*SearchEngineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SearchEngineService_SearchEngineAllIndex_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchEngineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SearchEngineServiceServer).SearchEngineAllIndex(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.SearchEngineService/SearchEngineAllIndex",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SearchEngineServiceServer).SearchEngineAllIndex(ctx, req.(*SearchEngineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SearchEngineService_SearchEngineAllIndexCount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchEngineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SearchEngineServiceServer).SearchEngineAllIndexCount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.SearchEngineService/SearchEngineAllIndexCount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SearchEngineServiceServer).SearchEngineAllIndexCount(ctx, req.(*SearchEngineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SearchEngineService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.SearchEngineService",
	HandlerType: (*SearchEngineServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SearchEngineAdd",
			Handler:    _SearchEngineService_SearchEngineAdd_Handler,
		},
		{
			MethodName: "SearchEngineSearch",
			Handler:    _SearchEngineService_SearchEngineSearch_Handler,
		},
		{
			MethodName: "SearchEngineAllIndex",
			Handler:    _SearchEngineService_SearchEngineAllIndex_Handler,
		},
		{
			MethodName: "SearchEngineAllIndexCount",
			Handler:    _SearchEngineService_SearchEngineAllIndexCount_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "searchEngineService.pb",
}
